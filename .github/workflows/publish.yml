name: "publish"
on:
  push:
    branches:
      - release
  workflow_dispatch:
jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04"
            args: ""
          - platform: "windows-latest"
            args: ""
          - platform: "ubuntu-22.04"
            args: "--target aarch64-unknown-linux-gnu"
            arch: "arm64"
    runs-on: ${{ matrix.platform }}
    env:
      DENO_DIR: deno_cache
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || matrix.arch == 'arm64' && 'aarch64-unknown-linux-gnu' || '' }}
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"
      - name: setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.x
      - name: cache Deno dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.DENO_DIR }}
          key: ${{ hashFiles('deno.lock') }}
      - name: install frontend dependencies
        run: deno install
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' && matrix.arch != 'arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libudev-dev
      - name: install dependencies (ARM64 cross-compilation)
        if: matrix.platform == 'ubuntu-22.04' && matrix.arch == 'arm64'
        run: |
          # Install cross-compilation toolchain
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libc6-dev-arm64-cross pkg-config
          
          # Create complete pkg-config files for cross-compilation
          sudo mkdir -p /usr/lib/aarch64-linux-gnu/pkgconfig
          
          # Create glib-2.0.pc (base dependency)
          sudo tee /usr/lib/aarch64-linux-gnu/pkgconfig/glib-2.0.pc << 'EOF'
          prefix=/usr
          exec_prefix=${prefix}
          libdir=${exec_prefix}/lib/aarch64-linux-gnu
          includedir=${prefix}/include
          
          Name: GLib
          Description: C Utility Library
          Version: 2.72.4
          Libs: -L${libdir} -lglib-2.0
          Cflags: -I${includedir}/glib-2.0 -I${libdir}/glib-2.0/include
          EOF
          
          # Create cairo.pc
          sudo tee /usr/lib/aarch64-linux-gnu/pkgconfig/cairo.pc << 'EOF'
          prefix=/usr
          exec_prefix=${prefix}
          libdir=${exec_prefix}/lib/aarch64-linux-gnu
          includedir=${prefix}/include
          
          Name: cairo
          Description: Multi-platform 2D graphics library
          Version: 1.16.0
          Libs: -L${libdir} -lcairo
          Cflags: -I${includedir}/cairo
          EOF
          
          # Create pango.pc
          sudo tee /usr/lib/aarch64-linux-gnu/pkgconfig/pango.pc << 'EOF'
          prefix=/usr
          exec_prefix=${prefix}
          libdir=${exec_prefix}/lib/aarch64-linux-gnu
          includedir=${prefix}/include
          
          Name: Pango
          Description: Internationalized text handling
          Version: 1.50.6
          Requires: glib-2.0 cairo
          Libs: -L${libdir} -lpango-1.0
          Cflags: -I${includedir}/pango-1.0
          EOF
          
          # Create gdk-pixbuf-2.0.pc
          sudo tee /usr/lib/aarch64-linux-gnu/pkgconfig/gdk-pixbuf-2.0.pc << 'EOF'
          prefix=/usr
          exec_prefix=${prefix}
          libdir=${exec_prefix}/lib/aarch64-linux-gnu
          includedir=${prefix}/include
          
          Name: GdkPixbuf
          Description: Image loading and scaling
          Version: 2.42.8
          Requires: glib-2.0
          Libs: -L${libdir} -lgdk_pixbuf-2.0
          Cflags: -I${includedir}/gdk-pixbuf-2.0
          EOF
          
          # Create atk.pc
          sudo tee /usr/lib/aarch64-linux-gnu/pkgconfig/atk.pc << 'EOF'
          prefix=/usr
          exec_prefix=${prefix}
          libdir=${exec_prefix}/lib/aarch64-linux-gnu
          includedir=${prefix}/include
          
          Name: Atk
          Description: Accessibility toolkit
          Version: 2.36.0
          Requires: glib-2.0
          Libs: -L${libdir} -latk-1.0
          Cflags: -I${includedir}/atk-1.0
          EOF
          
          # Create gdk-3.0.pc (now with proper dependencies)
          sudo tee /usr/lib/aarch64-linux-gnu/pkgconfig/gdk-3.0.pc << 'EOF'
          prefix=/usr
          exec_prefix=${prefix}
          libdir=${exec_prefix}/lib/aarch64-linux-gnu
          includedir=${prefix}/include
          
          Name: GDK
          Description: GTK+ Drawing Kit
          Version: 3.24.33
          Requires: gdk-pixbuf-2.0 pango cairo glib-2.0
          Libs: -L${libdir} -lgdk-3
          Cflags: -I${includedir}/gtk-3.0 -I${includedir}/gtk-3.0/gdk
          EOF
          
          # Create gtk+-3.0.pc
          sudo tee /usr/lib/aarch64-linux-gnu/pkgconfig/gtk+-3.0.pc << 'EOF'
          prefix=/usr
          exec_prefix=${prefix}
          libdir=${exec_prefix}/lib/aarch64-linux-gnu
          includedir=${prefix}/include
          
          Name: GTK+
          Description: GTK+ Graphical UI Library
          Version: 3.24.33
          Requires: gdk-3.0 atk cairo glib-2.0 pango gdk-pixbuf-2.0
          Libs: -L${libdir} -lgtk-3
          Cflags: -I${includedir}/gtk-3.0
          EOF
          
          # Create webkit2gtk-4.1.pc
          sudo tee /usr/lib/aarch64-linux-gnu/pkgconfig/webkit2gtk-4.1.pc << 'EOF'
          prefix=/usr
          exec_prefix=${prefix}
          libdir=${exec_prefix}/lib/aarch64-linux-gnu
          includedir=${prefix}/include
          
          Name: WebKit2GTK
          Description: WebKit2GTK+ API
          Version: 2.40.5
          Requires: gtk+-3.0 glib-2.0
          Libs: -L${libdir} -lwebkit2gtk-4.1
          Cflags: -I${includedir}/webkitgtk-4.1
          EOF
          
          # Create javascriptcoregtk-4.1.pc (WebKit JavaScript engine)
          sudo tee /usr/lib/aarch64-linux-gnu/pkgconfig/javascriptcoregtk-4.1.pc << 'EOF'
          prefix=/usr
          exec_prefix=${prefix}
          libdir=${exec_prefix}/lib/aarch64-linux-gnu
          includedir=${prefix}/include
          
          Name: JavaScriptCoreGTK
          Description: JavaScript engine from WebKitGTK+
          Version: 2.40.5
          Requires: glib-2.0
          Libs: -L${libdir} -ljavascriptcoregtk-4.1
          Cflags: -I${includedir}/webkitgtk-4.1
          EOF
          
          # Create additional required .pc files
          sudo tee /usr/lib/aarch64-linux-gnu/pkgconfig/libappindicator3-0.1.pc << 'EOF'
          prefix=/usr
          exec_prefix=${prefix}
          libdir=${exec_prefix}/lib/aarch64-linux-gnu
          includedir=${prefix}/include
          
          Name: appindicator3-0.1
          Description: Application indicators
          Version: 0.4.92
          Requires: gtk+-3.0
          Libs: -L${libdir} -lappindicator3
          Cflags: -I${includedir}/libappindicator3-0.1
          EOF
          
          sudo tee /usr/lib/aarch64-linux-gnu/pkgconfig/librsvg-2.0.pc << 'EOF'
          prefix=/usr
          exec_prefix=${prefix}
          libdir=${exec_prefix}/lib/aarch64-linux-gnu
          includedir=${prefix}/include
          
          Name: librsvg
          Description: SVG library
          Version: 2.52.5
          Requires: gdk-pixbuf-2.0 cairo glib-2.0
          Libs: -L${libdir} -lrsvg-2
          Cflags: -I${includedir}/librsvg-2.0
          EOF
          
          sudo tee /usr/lib/aarch64-linux-gnu/pkgconfig/libudev.pc << 'EOF'
          prefix=/usr
          exec_prefix=${prefix}
          libdir=${exec_prefix}/lib/aarch64-linux-gnu
          includedir=${prefix}/include
          
          Name: libudev
          Description: udev library
          Version: 249
          Libs: -L${libdir} -ludev
          Cflags: -I${includedir}
          EOF
          
          echo "Complete pkg-config setup for ARM64 cross-compilation created"
      - name: Set cross-compilation environment (ARM64)
        if: matrix.platform == 'ubuntu-22.04' && matrix.arch == 'arm64'
        run: |
          echo "CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CXX_aarch64_unknown_linux_gnu=aarch64-linux-gnu-g++" >> $GITHUB_ENV
          echo "AR_aarch64_unknown_linux_gnu=aarch64-linux-gnu-ar" >> $GITHUB_ENV
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "PKG_CONFIG_SYSROOT_DIR=/usr/aarch64-linux-gnu" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig:/usr/share/pkgconfig" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1" >> $GITHUB_ENV
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tauriScript: deno task tauri
          tagName: tv__VERSION__
          releaseName: "OpenDeck v__VERSION__"
          releaseBody: "See the assets to download this version. See the README for installation instructions."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
